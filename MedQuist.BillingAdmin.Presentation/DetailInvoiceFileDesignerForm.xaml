<Window  x:Class="MedQuist.BillingAdmin.Presentation.DetailInvoiceFileDesignerForm" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
        xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:local="clr-namespace:MedQuist.BillingAdmin.Presentation.Helpers"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ds="clr-namespace:SpherisConstrols;assembly=Spheris.BillingAdmin.WpfUserControls"
xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        xmlns:vc="clr-namespace:ValueConverters" 
        Width="600" 
        Height="460" 
    WindowStyle="None"
         
            >
    <Window.Resources>

        <!-- The WPF DataGrid (WPF Toolkit version) has a bug that throws a format exception
        when a WPF DataGrid is bound to a SelectedItem property, as we do here. The Ignore New
        Item Plave Holder Converter works around this bug. For more information on the bug and
        the converter, see Nigel Spencer's Blog (2009-04-30), which discusses the bug and provides 
        the fix. Link to blog post can be found in the remarks to the value converter.  -->

        <!-- Value Converters -->
        <vc:IgnoreNewItemPlaceHolderConverter x:Key="ignoreNewItemPlaceHolderConverter"/>

        <SolidColorBrush x:Key="SpherisLightBlue" Color="#FF4E78B4" Opacity="1"/>
        <SolidColorBrush x:Key="SpherisDarkBlue" Color="#FF154F99" Opacity="1"/>

        <!--specifies a corner radius to use throughout this page-->
        <CornerRadius x:Key="BorderRadii">5</CornerRadius>


        <Style  TargetType="{x:Type TextBox}">
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="IsReadOnly" Value="False"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <!--note this border with associated corner radius-->
                        <Border Name="Border" 
                                CornerRadius="10" 
                                Padding="2" 
                                BorderThickness="1" Background="White"
>
                            <ScrollViewer SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RowStyle" TargetType="{x:Type DataGridRow}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    
    <Border BorderBrush="Black">
        
     <Grid ShowGridLines="false">
        <Grid  MouseDown="Grid_MouseDown" 
               ShowGridLines="false" 
               Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" 
               x:Name="ModalDialogParent"
               >
            <Grid.Resources>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="25"/>
                <!-- This column will receive all remaining width -->
        <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <!-- This row will receive all remaining Height -->
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>




        <DockPanel Grid.Column="0" Grid.ColumnSpan="3">
            <TextBlock Text="Type" Margin="5" VerticalAlignment="Top" HorizontalAlignment="Left"/>
            <ComboBox ItemsSource="{Binding Table,ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                          SelectedValue="{Binding Package,ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
SelectionChanged="TableTypesCombo_SelectionChanged"                      
                          DisplayMemberPath="Description" 
                          Name="TableTypesCombo" 
                          Width="420" 
                          Margin="5" 
                          VerticalAlignment="Top">

                <ComboBox.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=btnSave,Path=IsEnabled}" Value="False">
                                <Setter Property="ComboBox.Focusable" Value="False"/>
                                <Setter Property="ComboBox.IsHitTestVisible" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>

            </ComboBox>
            <Button Opacity="0.5" Background="#FFF9F9F0" Name="btnNewStyle" Margin="5" Width="30" 
                        Command="{Binding NewTypeCommand}" Content="New"/>
            <Button Opacity="0.5"  Background="#FFF9F9F0" Name="removeBtn" Margin="5" Width="50" 
                        Command="{Binding RemoveTypeCommand}" Content="Remove"/>

        </DockPanel>

        <DockPanel Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3">
            <TextBlock Text="Description:  " Margin="5" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <TextBox Text="{Binding ElementName=TableTypesCombo, 
                                    Path=SelectedValue.Description, 
                                    ValidatesOnDataErrors=True, 
                                    UpdateSourceTrigger=PropertyChanged}" 
                                    Name="description" 
                                    Margin="5" 
                                    HorizontalAlignment="Left" 
                                    VerticalAlignment="Center" 
                                    Width="260"/>
            <TextBlock Text="Short: " Margin="5" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <TextBox Text="{Binding ElementName=TableTypesCombo, 
                                    Path=SelectedValue.ShortName, 
                                    ValidatesOnDataErrors=True, 
                                    UpdateSourceTrigger=PropertyChanged}" 
                                    Name="short" 
                                    Margin="5" 
                                    HorizontalAlignment="Left" 
                                    VerticalAlignment="Center" 
                                    Width="175"/>
        </DockPanel>

        <TextBox Text="{Binding Package.Sql , ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                    AcceptsReturn="True"
                    Grid.Column="0" 
                    Grid.Row="3" 
                     Grid.ColumnSpan="3"  
                     Margin="5" 
                     FontWeight="Bold" 
                     Height="Auto" 
                     TextWrapping="Wrap">
            <TextBox.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=SqlButton, Path=IsVisible}" Value="False">
                            <Setter Property="Button.Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=SqlButton, Path=IsVisible}" Value="True">
                            <Setter Property="Button.Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>


        <Label Name="reportedfields" Grid.Column="0" Grid.Row="2" VerticalAlignment="Bottom" Content="Reported Fields:" Visibility="{Binding IsSimpleMode}">
        </Label>

        <Button Opacity="0.5" 
                    Background="#FFF9F9F0" 
                    VerticalAlignment="Center" 
                    Grid.Row="2" 
                    Grid.Column="0" 
                    Grid.ColumnSpan="3" 
                    HorizontalAlignment="Center" 
                    Content="Fields" 
                    Command="{Binding SQLCommand}">
            <Button.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=SqlButton, Path=IsVisible}" Value="False">
                            <Setter Property="Button.Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=SqlButton, Path=IsVisible}" Value="True">
                            <Setter Property="Button.Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>


        <Label Name="lblAvailableFields" Grid.Column="2" Grid.Row="2" VerticalAlignment="Bottom" Content="Available Fields:" Visibility="{Binding IsSimpleMode}">
        </Label>
        <Border Grid.Column="0" Grid.Row="3"  BorderThickness="0" Margin="5" CornerRadius="10" 
                      Visibility="{Binding IsSimpleMode}" 
                >
            <Border.BitmapEffect>
                <DropShadowBitmapEffect/>
            </Border.BitmapEffect>
            <Grid Grid.Column="0" Grid.Row="3">
                <Border Grid.Column="0" Grid.Row="3" x:Name="BDRounded" BorderThickness="0" CornerRadius="10" Background="White"/>

                <DataGrid 
                    ItemsSource="{Binding Package.ReportedFields,ValidatesOnDataErrors=True ,UpdateSourceTrigger=PropertyChanged}"
                        BorderBrush="{x:Null}"
                              Grid.Column="0" 
                      Grid.Row="3" 
                      RowStyle="{StaticResource RowStyle}"
                      IsSynchronizedWithCurrentItem="True"
                      AutoGenerateColumns="False" 
                      local:DataGridHelper.SelectedItems="{Binding SelectedGrid}"
                      DockPanel.Dock="Top"
                      CanUserDeleteRows="False"
                    dd:DragDrop.IsDropTarget="True" 
                    dd:DragDrop.DropHandler="{Binding}"                     
                    dd:DragDrop.IsDragSource="True" 
                      SelectionMode="Single" 
                     Margin="3"
                      >
                    <DataGrid.OpacityMask>
                        <VisualBrush Visual="{Binding ElementName=BDRounded}"/>
                    </DataGrid.OpacityMask>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Field" Width="120" IsReadOnly="true">

                            <DataGridTextColumn.Binding>
                                <Binding Path="ReportedFieldName" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged"/>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="As" Width="*" IsReadOnly="False" >
                            <DataGridTextColumn.Binding >
                                <Binding Path="DisplayedAs" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged" />
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Border>

        <Border Grid.Column="2" Grid.Row="3"  BorderThickness="0" Margin="5" CornerRadius="10" 
                      Visibility="{Binding IsSimpleMode}" 
                >
            <Border.BitmapEffect>
                <DropShadowBitmapEffect/>
            </Border.BitmapEffect>
            <Grid Grid.Column="2" Grid.Row="3">
                <Border   Grid.Column="2" Grid.Row="3" x:Name="BDRounded2" BorderThickness="0" CornerRadius="10" Background="White"/>

                <ListBox Grid.Column="2" 
                         Background="LightGray"
                         BorderBrush="{x:Null}"
                         IsEnabled="{Binding Package.HasCsv}"
                     Grid.Row="3" 
                     Name="lstAvailableFields" 
                     local:ListBoxHelper.SelectedItems="{Binding SelectedData}"
                     Margin="3"
                     Visibility="{Binding IsSimpleMode}" 
                     ItemsSource="{Binding ElementName=TableTypesCombo, 
                        Path=SelectedItem.AvailableFields,Mode=TwoWay}" 
                     IsSynchronizedWithCurrentItem="True" 
                     SelectionMode="Extended"
                     dd:DragDrop.DropHandler="{Binding}"                     
                     dd:DragDrop.IsDragSource="True" 
                     dd:DragDrop.IsDropTarget="True" 
			         >
                    <ListBox.OpacityMask>
                        <VisualBrush Visual="{Binding ElementName=BDRounded2}"/>
                    </ListBox.OpacityMask>

                </ListBox>
            </Grid>
        </Border>


        <Grid ShowGridLines="False" Grid.Column="1" Grid.Row="3" 
>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
                <!-- This row will receive all remaining Height -->
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>


            <Button Command="{Binding ShiftLeftCommand}" Opacity="0.5" Background="#FFF9F9F0"
             Content="&lt;&lt;" VerticalAlignment="Bottom" Grid.Row="0" 
                      Visibility="{Binding IsSimpleMode}" 
                         />
            <Button Opacity="0.5" Background="#FFF9F9F0" VerticalAlignment="Center" Name="SqlButton" Grid.Row="1" Content="SQL" Command="{Binding SQLCommand}" Visibility="{Binding IsSimpleMode}">
            </Button>

            <Button Opacity="0.5" Background="#FFF9F9F0" Command="{Binding ShiftRightCommand}" Content=">>" VerticalAlignment="Top" Grid.Row="2" 
                      Visibility="{Binding IsSimpleMode}" 
                         />
        </Grid>

        <DockPanel Grid.Column="0" 
                   Grid.Row="4" 
                   Grid.ColumnSpan="3">
            <TextBlock Text="OrderBy:  " Margin="5" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <!--     <TextBox Text="{Binding ElementName=TableTypesCombo, Path=SelectedItem.OrderByClause}" Margin="5" VerticalAlignment="Center"  HorizontalAlignment="Left" Width="271" />-->
            <TextBox Text="{Binding Path=OrderByClause,Mode=TwoWay}" Margin="5" VerticalAlignment="Center"  HorizontalAlignment="Left" Width="271" />
            <TextBlock  Text="{Binding Path=whatthe,Mode=OneWay}" Background="#FFF9F9F0" Margin="5" VerticalAlignment="Center"  HorizontalAlignment="Left" Width="223"/>

        </DockPanel>    
        <CheckBox IsChecked="{Binding ElementName=TableTypesCombo, Path=SelectedItem.MustEncrypt,Mode=TwoWay}" 
                  Margin="5,6,0,8" 
                  Name="chkActive" Grid.Row="5" 
                  VerticalAlignment="Center" 
                  Height="16" 
                  HorizontalAlignment="Left">Must Encrypt?
        </CheckBox>

        <DockPanel Grid.Column="2" Grid.Row="5" Width="100" HorizontalAlignment="Right">
            <Button Name="btnCancel" 
                    Opacity="0.5" 
                    Background="#FFF9F9F0" 
                    Command="{Binding Path=CloseCommand}" 
                    Width="50" 
                    Height="23" 
                    Content="Close" 
                    HorizontalAlignment="Right" />
            <Button Name="btnSave" Opacity="0.5" Background="#FFF9F9F0"
                        Command="{Binding SaveCommand}" 
                        Width="50" 
                        Height="23" 
                        Content="Save" 
                        HorizontalAlignment="Right"/>
        </DockPanel>
        </Grid>

        <ds:SaveChanges  TextBackground="#FFFFFFC5" x:Name="SaveChanges"
                               Panel.ZIndex="99999"
                               Grid.Column="0" Grid.Row="0" 
                               IsEnabled="True"
                               Width="250" 
                             HorizontalAlignment="Center"
                               Height="35" 
                               Modified ="{Binding Modified}"
                               BorderBrush="Azure" 
                               BorderThickness="0" 
                               Background="#FFFFFFC5">
        </ds:SaveChanges>


        </Grid>
        </Border>
</Window>