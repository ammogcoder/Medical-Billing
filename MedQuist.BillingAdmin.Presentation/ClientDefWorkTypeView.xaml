<UserControl x:Class="MedQuist.BillingAdmin.Presentation.ClientDefWorkTypeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prefx="clr-namespace:MedQuist.BillingAdmin.ViewModels;assembly=MedQuist.ViewModels"
             xmlns:here="clr-namespace:MedQuist.BillingAdmin.Presentation"
             xmlns:helpers="clr-namespace:MedQuist.BillingAdmin.Presentation.Helpers"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             Background="{StaticResource WindowBackgroundBrush}"
             FocusManager.FocusedElement="{Binding ElementName=WorkType}"
             d:DesignHeight="600"
             d:DesignWidth="400">
    <UserControl.Resources>

        <Style x:Key="RowStyle"
               TargetType="{x:Type DataGridRow}">
            <Setter Property="Background"
                    Value="{StaticResource WindowBackgroundBrush}" />
        </Style>

        <Style x:Key="defaultCellStyle"
               TargetType="{x:Type DataGridCell}">
            <Style.Triggers>
                <Trigger Property="IsEditing"
                         Value="true">
                    <Setter Property="BorderBrush"
                            Value="Red" />
                    <Setter Property="BorderThickness"
                            Value="2" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid >
        <here:WPFMessageBox Panel.ZIndex="9999"
                            x:Name="MsgBox" />

        <Grid x:Name="MainGrid" IsEnabled="{Binding HasClientDef}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <!-- The List -->
                <ColumnDefinition />
                <!-- The Data cells-->
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <!-- CRUD BUTTONS spans both columns-->
                <RowDefinition Height="Auto" />
                <!-- List and Edit Cells Grids -->
                <RowDefinition Height="*" />
                <!-- the UserControl -->
            </Grid.RowDefinitions>

            <!-- The grid for the CRUD buttons -->
            <Grid Grid.Row="0"
                  Grid.ColumnSpan="2"
                  HorizontalAlignment="Stretch"
                  Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Button Name="Delete"
                        IsEnabled="{Binding ElementName=NewAltButton,Path=IsEnabled}"
                        Command="{Binding DeleteCommand}"
                        Content="Delete"
                        Grid.Column="0"></Button>
                <Button Name="Restore"
                        Command="{Binding RestoreCommand}"
                        Content="Cancel"
                        Grid.Column="1"></Button>
                <Button Name="addnew"
                        Command="{Binding AddNewCommand}"
                        Content="Add New"
                        Grid.Column="2"></Button>
                <Button Name="save"
                        Command="{Binding SaveCommand}"
                        Content="Save"
                        Grid.Column="3"></Button>
            </Grid>

            <DataGrid Grid.Row="1"
                      Grid.RowSpan="2"
                      Grid.Column="0"
                      IsHitTestVisible="{Binding CanSelectExtWorkType}"
                      VerticalAlignment="Top"
                      RowStyle="{StaticResource RowStyle}"
                      Background="{StaticResource WindowBackgroundBrush}"
                      ItemsSource="{Binding ExtWorkTypes}"
                      SelectedItem="{Binding SelectedExtWorkType}"
                      CellStyle="{StaticResource defaultCellStyle}"
                      x:Name="ExtWorkTypes"
                      CanUserAddRows="False"
                      SelectionMode="Single"
                      CanUserDeleteRows="False"
                      AutoGenerateColumns="False">

                <DataGrid.Columns>
                    <DataGridTextColumn Header="Work Type"
                                        Width="Auto"
                                        Binding="{Binding Path=EXT_WORK_TYPE}">
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Description"
                                        Width="*"
                                        Binding="{Binding Path=DESCR}" />

                </DataGrid.Columns>
            </DataGrid>

            <!-- Grid for the edit cells -->
            <Grid  helpers:EnterKeyTraversal.IsEnabled="True"
                   Grid.Column="1"
                   Grid.Row="1"
                   Height="Auto"
                   HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <!-- 0 Work type   -->
                    <RowDefinition Height="Auto" />
                    <!-- 1 Description  -->
                    <RowDefinition Height="Auto" />
                    <!-- 2 TAT Threshold  -->
                    <RowDefinition Height="Auto" />
                    <!-- 3 Stat TAT Threshold  -->
                    <RowDefinition Height="Auto" />
                    <!-- 4 Tally for volume  -->
                    <RowDefinition Height="Auto" />
                    <!-- 5 Buttons for Override  -->
                    <RowDefinition Height="Auto" />
                    <!-- 6 if override then show row -->
                    <RowDefinition Height="Auto" />
                    
                    <!-- 7 Alt rate combo -->
                </Grid.RowDefinitions>

                <Label Content="Work Type"
                       Grid.Row="0"
                       Height="Auto"
                       Grid.Column="0"></Label>

                <TextBox Grid.Column="1"
                         Grid.Row="0"
                         x:Name="WorkType"
                          
                         Height="Auto"
                         Text="{Binding ElementName=ExtWorkTypes,Path=SelectedValue.EXT_WORK_TYPE,
                                    ValidatesOnDataErrors=True, 
                                    UpdateSourceTrigger=PropertyChanged}"></TextBox>


                <Label Content="Description"
                       Grid.Row="1"
                       Height="Auto"
                       Grid.Column="0"></Label>

                <TextBox Grid.Column="1"
                         Grid.Row="1"
                         Height="Auto"
                         Text="{Binding ElementName=ExtWorkTypes,Path=SelectedValue.DESCR,
                                    ValidatesOnDataErrors=True, 
                                    UpdateSourceTrigger=PropertyChanged}"></TextBox>


                <Label Content="TAT Threshold"
                       Grid.Row="2"
                       Height="Auto"
                       Grid.Column="0"></Label>

                <TextBox Grid.Column="1"
                         Grid.Row="2"
                         Height="Auto"
                         Text="{Binding ElementName=ExtWorkTypes,Path=SelectedValue.TAT_THRESHOLD,
                                    ValidatesOnDataErrors=True, 
                                    UpdateSourceTrigger=PropertyChanged}"></TextBox>

                <Label Grid.Column="0"
                       Grid.Row="3"
                       Content="STAT Threshold"
                       Height="Auto"></Label>
                <TextBox Grid.Column="1"
                         Grid.Row="3"
                         Height="Auto"
                         Text="{Binding ElementName=ExtWorkTypes,Path=SelectedValue.STAT_TAT_THRESHOLD,
                                    ValidatesOnDataErrors=True, 
                                    UpdateSourceTrigger=PropertyChanged}"></TextBox>
                
                <CheckBox IsChecked="{Binding ElementName=ExtWorkTypes,Path=SelectedValue.TALLY_FOR_VOLUME_EVT,UpdateSourceTrigger=PropertyChanged}"
                          Grid.Column="0"
                          Grid.Row="4"
                          Grid.ColumnSpan="2"
                          Margin="5"
                          Content="Counts for Volume Adjustment"
                          Width="Auto">
                </CheckBox>
                

                <!-- this hidden for view to transport data to invoiceGroupViewModel -->
                <Label Content="Override Group"
                       x:Name="InvoiceGrpIdLabel"
                       Height="Auto"
                       Grid.Column="0"
                       Grid.Row="5"></Label>


                <Button Content="Clear Override"
                        Grid.Row="5"
                        Grid.Column="0"
                        Command="{Binding ClearDefInvoiceCommand}" />

                <Button Content="Override Invoice Group"
                        Grid.Row="5"
                        Grid.Column="1"
                        Command="{Binding PopCommand}" />
                <Grid Grid.Row="6"
                      Grid.Column="0"
                      Grid.ColumnSpan="2"
                      Visibility="{Binding ShowOverrideInvoice,UpdateSourceTrigger=PropertyChanged}"
                      x:Name="OverrideHome">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Background="Bisque"
                            BorderBrush="Black"
                            BorderThickness="1" />
                    <TextBlock Text="{Binding ElementName=ExtWorkTypes,Path=SelectedValue.INVOICE_GRP_ID,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                               Style="{StaticResource AutoCollapse}"
                               x:Name="InvoiceGrpIdTextBox"
                               Margin="5,5,5,0"
                               Grid.Column="0">
                     </TextBlock>
                    <TextBlock Text="{Binding OverRideInvoiceGroupSentTo,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True,Mode=TwoWay}"
                               Style="{StaticResource AutoCollapse}"
                               x:Name="InvoiceGrpName"
                               Margin="5,5,0,0"
                               Grid.Column="1">
                    </TextBlock>
                </Grid>
                <Label Content="Rate Override"
                       Grid.Column="0"
                       Grid.Row="7" />
                <ComboBox Grid.Column="1"
                          Grid.Row="7"
                          ItemsSource="{Binding AltContractRates}"
                          DisplayMemberPath="DESCR"
                          SelectedValue="{Binding SelectedAltContractRate}" />


            </Grid>

            <Grid Grid.Column="0"
                  Grid.ColumnSpan="3"
                  Grid.Row="2"
                  x:Name="PopHolder"></Grid>

            <Popup x:Name="popLines"
                   DataContext="InvoiceGrpViewModel"
                   Grid.Row="1"
                   PlacementTarget="{Binding ElementName=PopHolder}"
                   Placement="Relative"
                   IsOpen="{Binding PopSwitch, Mode=TwoWay}"
                   Width="{Binding Path=ActualWidth, Mode=OneWay, ElementName=PopHolder}"
                   Height="{Binding Path=ActualHeight, Mode=OneWay, ElementName=PopHolder}"
                   AllowsTransparency="True"
                   StaysOpen="False"
                   PopupAnimation="None"
                   HorizontalAlignment="Right"
                   HorizontalOffset="0"
                   VerticalOffset="0">

                <Border Background="Transparent"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        BorderBrush="#FF000000"
                        BorderThickness="3"
                        CornerRadius="5,5,5,5">
                    <Border.Effect>
                        <DropShadowEffect Color="#FF666262"
                                          Opacity="0.8" />
                    </Border.Effect>

                    <Grid Background="{StaticResource WindowBackgroundBrush}">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="40" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Thumb Grid.Row="0"
                               Width="Auto"
                               Height="40"
                               Tag="{Binding ElementName=popLines}"
                               helpers:PopupBehaviours.IsMoveEnabledProperty="true">
                            <Thumb.Template>
                                <ControlTemplate>
                                    <Border Width="Auto"
                                            Height="20"
                                            BorderBrush="#FF000000"
                                            Background="{StaticResource WindowBackgroundBrush}"
                                            VerticalAlignment="Top"
                                            CornerRadius="5,5,0,0">
                                        <Border.Effect>
                                            <DropShadowEffect Color="#FF666262"
                                                              Opacity="0.8" />
                                        </Border.Effect>

                                        <Label Content="Override Default Invoice Group"
                                               Background="LightSalmon"
                                               FontWeight="Bold"
                                               Foreground="Black"
                                               VerticalContentAlignment="Center"
                                               Margin="0,-5,0,-5" />
                                    </Border>
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>

                        <Grid Grid.Row="1"
                              Background="{StaticResource WindowBackgroundBrush}"
                              Width="Auto"
                              Height="Auto"
                              Margin="0,0,0,10">

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <here:InvoiceGroupView x:Name="invoiceGroupView"
                                                       Grid.Row="1" />

                            </Grid>

                        </Grid>


                    </Grid>
                </Border>
            </Popup>

        </Grid>
    </Grid>
</UserControl>
